import{a as o,b as n}from"./api-D_0F9__f.js";const r="http://localhost:3000",u={fetchCurrentQueues:async()=>{try{console.log(`Making request to: ${r}/queue/serving`);const e=await o.get(`${r}/queue/serving`);return console.log("Current queues API response:",e.data),e.data}catch(e){throw console.error("API error getting current queues:",e),e}},fetchPendingQueues:async()=>(await o.get(`${r}/queue/pending`)).data,getQueuePosition:async e=>{try{console.log(`Making request to: ${r}/queue/${e}/position`);const t=await o.get(`${r}/queue/${e}/position`);return console.log("Position API response:",t.data),t.data}catch(t){throw console.error("API error getting position:",t),t}},createQueue:async e=>{try{console.log("Creating queue with data:",e);const t=localStorage.getItem("token");console.log("Token being used:",t?"Valid token present":"No token");const s=await n.post("/queue",e);return console.log("Queue creation response:",s.data),s.data}catch(t){throw console.error("Error creating queue:",t),t}},checkQueueExists:async e=>{try{return(await o.get(`${r}/queue/${e}/exists`)).data.exists}catch(t){return console.error("Error checking if queue exists:",t),!1}},fetchQueueDetails:async e=>{try{console.log(`Making request to: ${r}/queue/${e}/details`);const t=await o.get(`${r}/queue/${e}/details`);return console.log(`Details for queue ${e}:`,t.data),t.data}catch(t){throw console.error(`Error fetching details for queue ${e}:`,t),t}},fetchPendingQueuesWithDetails:async()=>{try{console.log(`Making request to: ${r}/queue/pending/details`);const e=await o.get(`${r}/queue/pending/details`);return console.log("Pending queues with details:",e.data),e.data}catch(e){throw console.error("Error fetching pending queues with details:",e),e}},fetchCurrentQueuesWithDetails:async()=>{try{console.log(`Making request to: ${r}/queue/serving/details`);const e=await o.get(`${r}/queue/serving/details`);return console.log("Current queues with details:",e.data),e.data}catch(e){throw console.error("Error fetching current queues with details:",e),e}},fetchDetailsForMultipleQueues:async e=>{try{console.log(`Making request to: ${r}/queue/bulk-details`);const t=await o.post(`${r}/queue/bulk-details`,{queueIds:e});return console.log("Bulk queue details:",t.data),t.data}catch(t){throw console.error("Error fetching bulk queue details:",t),t}},updateQueueStatus:async(e,t)=>{try{return console.log(`Updating queue ${e} status to ${t}`),(await o.patch(`${r}/queue/${e}`,{status:t})).data}catch(s){throw console.error(`Error updating queue ${e} status:`,s),s}}};export{u as q};
