import{j as s}from"./jsx-runtime-ADgNcF8R.js";import{r as n}from"./iframe-DK1y04Ng.js";import{g as f}from"./RecentAppointmentData-yblrwM7G.js";import{a as y}from"./appointmentService-Cr9JVgLu.js";import{C as u}from"./Card--UtrwS-m.js";import{C as A}from"./CardContent-DLKbTG4E.js";import{T as a}from"./Typography-CYdwMn8V.js";import{B as o}from"./Box-DDoIQZtm.js";import{C as j}from"./CircularProgress-DGUkJBVb.js";import{B as T}from"./Button-Jf2bfJLe.js";import{u as v}from"./chunk-AYJ5UCUI-BNhOGDwc.js";const S=()=>{const N=v(),[d,h]=n.useState(f()),[x,m]=n.useState(!1),[l,g]=n.useState(null);n.useEffect(()=>{(async()=>{if(!localStorage.getItem("token")){console.log("No token found, using local storage data only");return}try{m(!0),console.log("Fetching real appointments from backend...");const i=await y.fetchUserAppointments();console.log("Real appointments fetched:",i);const c=i.map(t=>({id:t.appointmentNumber||t.id,appointmentNumber:t.appointmentNumber,type:t.reasonOfVisit,date:t.appointmentDate,time:t.appointmentTime,firstName:t.firstName,lastName:t.lastName,middleInitial:t.middleInitial,address:t.address,phoneNumber:t.phoneNumber,reasonOfVisit:t.reasonOfVisit,appointmentDate:t.appointmentDate,appointmentTime:t.appointmentTime,status:t.status,dbId:t.id,createdAt:t.createdAt,updatedAt:t.updatedAt}));h(c),c.forEach(t=>{f().find(p=>p.appointmentNumber===t.appointmentNumber||p.dbId===t.dbId)||saveRecentAppointments(t)})}catch(i){console.error("Failed to fetch real appointments from backend:",i),g("Could not load latest appointments from server. Showing local data.")}finally{m(!1)}})()},[]);const b=e=>{console.log("Navigating to QRCodeAppointment with real appointment:",e);const r=e.appointmentNumber||e.id;N(`/QRCodeAppointment/${r}`,{state:{appointment:{id:r,appointmentNumber:e.appointmentNumber,type:e.reasonOfVisit||e.type,date:e.appointmentDate||e.date,time:e.appointmentTime||e.time,firstName:e.firstName,lastName:e.lastName,middleInitial:e.middleInitial||"",address:e.address,phoneNumber:e.phoneNumber,reasonOfVisit:e.reasonOfVisit||e.type,appointmentDate:e.appointmentDate||e.date,appointmentTime:e.appointmentTime||e.time,status:e.status,dbId:e.dbId,createdAt:e.createdAt,updatedAt:e.updatedAt}}})};return x?s.jsx(u,{className:"RecentAppointmentsAppointment",children:s.jsxs(A,{children:[s.jsx(a,{variant:"h6",className:"SectionTitleAppointment",children:"RECENT APPOINTMENTS"}),s.jsxs(o,{display:"flex",justifyContent:"center",alignItems:"center",p:2,children:[s.jsx(j,{size:24}),s.jsx(a,{variant:"body2",style:{marginLeft:"10px"},children:"Loading real appointments..."})]})]})}):s.jsx(u,{className:"RecentAppointmentsAppointment",children:s.jsxs(A,{children:[s.jsx(a,{variant:"h6",className:"SectionTitleAppointment",children:"RECENT APPOINTMENTS"}),l&&s.jsx(o,{p:1,mb:1,children:s.jsx(a,{variant:"body2",color:"error",style:{fontSize:"0.8rem"},children:l})}),d.length===0?s.jsx(o,{p:2,textAlign:"center",children:s.jsx(a,{variant:"body2",color:"textSecondary",children:"No appointments found."})}):d.map((e,r)=>s.jsxs(o,{className:"AppointmentItemAppointment",children:[s.jsxs("div",{className:"AppointmentDivider",children:[s.jsx(a,{variant:"body1",className:"AppointmentTypeAppointment",children:e.reasonOfVisit||e.type}),s.jsx(a,{variant:"body2",className:"AppointmentDateAppointment",children:e.appointmentDate||e.date}),s.jsx(a,{variant:"body2",className:"AppointmentTimeAppointment",children:e.appointmentTime||e.time}),e.status&&s.jsxs(a,{variant:"body2",className:"AppointmentStatusAppointment",children:["Status: ",s.jsx("span",{style:{color:e.status==="confirmed"?"green":e.status==="cancelled"?"red":"orange"},children:e.status.toUpperCase()})]})]}),s.jsx(T,{size:"small",className:"SeeMoreAppointment",onClick:()=>b(e),children:"See More"})]},e.appointmentNumber||e.id||r))]})})};S.__docgenInfo={description:"",methods:[],displayName:"RecentAppointments"};export{S as R};
