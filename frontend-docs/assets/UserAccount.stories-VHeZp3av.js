import{j as e}from"./jsx-runtime-DkiM82gk.js";import{r as a}from"./iframe-C3eBI4HR.js";import{u as le}from"./AuthContext-Dpe9bnGC.js";import{a as x}from"./index-xsH4HHeE.js";import{N as de}from"./NavSide-CcurH5F3.js";import{E as y}from"./Edit-Chy2SM70.js";import{C as J}from"./Close-Bb_4zYo_.js";import"./createSvgIcon-CzF7HYjE.js";import"./identifier-CXwlgl7U.js";import"./DefaultPropsProvider-CnQGXLzU.js";import"./Description-BxIFoB3d.js";import"./Campaign-BFMHk49I.js";import"./chunk-AYJ5UCUI-C3lbJliT.js";const U=()=>{const{user:ue,getCurrentUserId:Y}=le(),A=Y(),[v,C]=a.useState(""),[P,S]=a.useState(""),[F,D]=a.useState(""),[p,E]=a.useState(""),[I,k]=a.useState(""),[B,ee]=a.useState(!1),[T,G]=a.useState(""),[i,L]=a.useState(""),[$,z]=a.useState(""),[_,g]=a.useState(""),[h,O]=a.useState("profile"),[w,n]=a.useState({text:"",type:""}),[r,l]=a.useState({email:!1,phoneNumber:!1,username:!1}),[q,M]=a.useState(null),[u,N]=a.useState(!0),[se,R]=a.useState(!0),[te,b]=a.useState(!1),[ae,j]=a.useState(null);a.useEffect(()=>{(async()=>{if(!A){R(!1);return}try{const t=localStorage.getItem("token"),o=(await x.get("http://localhost:3000/auth/profile",{headers:{Authorization:`Bearer ${t}`}})).data;C(o.firstName||""),S(o.lastName||""),D(o.username||""),E(o.email||""),k(o.contactNumber||"");const d=localStorage.getItem("lastUsernameChange");d&&(M(new Date(d)),re(new Date(d)))}catch(t){console.error("Error fetching user data:",t),n({text:"Failed to load user data. Please try again.",type:"error"})}finally{R(!1)}})()},[A]);const re=s=>{if(!s){N(!0);return}const t=30*24*60*60*1e3,o=Date.now()-s.getTime()>t;N(o)},oe=async s=>{s.preventDefault(),n({text:"",type:""});const t={firstName:v,lastName:P};r.email||r.phoneNumber||r.username&&u?(r.email&&(t.email=p),r.phoneNumber&&(t.contactNumber=I),j(t),b(!0)):await W(t)},W=async s=>{var t,c;try{const o=localStorage.getItem("token");s.username&&u&&(localStorage.setItem("lastUsernameChange",new Date().toISOString()),M(new Date),N(!1)),await x.post("http://localhost:3000/auth/update-profile",s,{headers:{Authorization:`Bearer ${o}`}}),n({text:"Profile updated successfully",type:"success"}),l({email:!1,phoneNumber:!1,password:!1,username:!1}),b(!1),g(""),j(null)}catch(o){console.error("Error updating profile:",o),n({text:((c=(t=o.response)==null?void 0:t.data)==null?void 0:c.message)||"Failed to update profile",type:"error"})}},ne=async s=>{s.preventDefault();try{console.log("Attempting to verify password");const t=await x.post("http://localhost:3000/auth/login",{email:p,emailOrUsername:p,username:F,password:_});console.log("Verification response received"),t.data&&t.data.access_token?(console.log("Password verification successful"),await W(ae)):(console.log("Password verification failed - unexpected response format"),n({text:"Incorrect password. Please try again.",type:"error"}))}catch(t){console.error("Error verifying password:",t),t.response?(console.log("Error status:",t.response.status),console.log("Error data:",t.response.data),n({text:t.response.data.message||"Incorrect password. Please try again.",type:"error"})):n({text:"Failed to verify password. Please try again.",type:"error"})}},ce=async s=>{var V,Z;if(s.preventDefault(),n({text:"",type:""}),i!==$){n({text:"New passwords do not match",type:"error"});return}if(i.length<8){n({text:"New password must be at least 8 characters long",type:"error"});return}const t=/[A-Z]/.test(i),c=/[a-z]/.test(i),o=/\d/.test(i),d=/[!@#$%^&*(),.?":{}|<>]/.test(i);if(!t||!c||!o||!d){n({text:"Password must contain uppercase, lowercase, numbers, and special characters",type:"error"});return}try{const f=localStorage.getItem("token");await x.post("http://localhost:3000/auth/update-profile",{password:i,oldPassword:T},{headers:{Authorization:`Bearer ${f}`}}),n({text:"Password updated successfully",type:"success"}),G(""),L(""),z(""),l({...r,password:!1})}catch(f){console.error("Error changing password:",f),n({text:((Z=(V=f.response)==null?void 0:V.data)==null?void 0:Z.message)||"Failed to change password. Please check your current password.",type:"error"})}},ie=()=>{b(!1),g(""),j(null)},H=()=>{if(!q)return null;const s=30*24*60*60*1e3,t=new Date(q.getTime()+s),c=new Date;if(c>=t)return null;const o=t-c;return`${Math.floor(o/(24*60*60*1e3))} days`};return se?e.jsx("div",{className:"AccountLoaderUAcc",children:"Loading..."}):e.jsxs("div",{className:`AccountUAcc ${B?"sidebar-open":""}`,children:[e.jsx(de,{isSidebarOpen:B,setIsSidebarOpen:ee}),e.jsx("div",{className:"AccountHeaderUAcc",children:e.jsx("h1",{className:"AccountHeaderUAcc",children:" User Account Settings"})}),e.jsxs("div",{className:"AccountContainerUAcc",children:[w.text&&e.jsx("div",{className:`MessageUAcc ${w.type}`,children:w.text}),e.jsxs("div",{className:"AccountTabsUAcc",children:[e.jsx("button",{className:`TabButtonUAcc ${h==="profile"?"active":""}`,onClick:()=>O("profile"),children:"Profile Information"}),e.jsx("button",{className:`TabButtonUAcc ${h==="password"?"active":""}`,onClick:()=>O("password"),children:"Change Password"})]}),te&&e.jsx("div",{className:"PasswordConfirmationOverlayUAcc",children:e.jsxs("div",{className:"PasswordConfirmationDialogUAcc",children:[e.jsx("h3",{children:"Confirm Changes"}),e.jsx("p",{children:"Please enter your password to confirm these changes to your account."}),e.jsxs("form",{className:"DialogFormGroupUAcc",onSubmit:ne,children:[e.jsxs("div",{className:"DialogFormGroupUAcc",children:[e.jsx("label",{className:"DialogLabel",htmlFor:"confirmationPassword",children:"Password*"}),e.jsx("input",{type:"password",id:"confirmationPassword",value:_,onChange:s=>g(s.target.value),autoFocus:!0,required:!0})]}),e.jsxs("div",{className:"DialogActionsUAcc",children:[e.jsx("button",{type:"button",className:"CancelButtonUAcc",onClick:ie,children:"Cancel"}),e.jsx("button",{type:"submit",className:"SaveButtonUAcc",children:"Confirm"})]})]})]})}),h==="profile"&&e.jsx("div",{className:"TabContentUAcc",children:e.jsxs("form",{onSubmit:oe,className:"AccountFormUAcc",children:[e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"firstName",children:"First name"}),e.jsx("input",{type:"text",id:"firstName",value:v,onChange:s=>C(s.target.value)})]}),e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"lastName",children:"Last name"}),e.jsx("input",{type:"text",id:"lastName",value:P,onChange:s=>S(s.target.value)})]}),e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"username",children:"Username"}),e.jsxs("div",{className:"InputWithActionUAcc",children:[e.jsx("input",{type:"text",id:"username",value:F,onChange:s=>D(s.target.value),disabled:!u||!r.username}),r.username?e.jsx("button",{type:"button",onClick:()=>l({...r,username:!1}),className:"CancelButtonUAcc",children:e.jsx("i",{className:"fas fa-times"})}):e.jsx("button",{type:"button",onClick:()=>l({...r,username:!0}),className:"EditButtonUAcc",disabled:!u,children:e.jsx(y,{fontSize:"small"})})]}),!u&&e.jsxs("p",{className:"RestrictionNoteUAcc",children:["Username can only be changed once every 30 days.",H()&&` Time remaining: ${H()}`]})]}),e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"email",children:"E-mail"}),e.jsxs("div",{className:"InputWithActionUAcc",children:[e.jsx("input",{type:"email",id:"email",value:p,onChange:s=>E(s.target.value),disabled:!r.email}),r.email?e.jsx("button",{type:"button",onClick:()=>l({...r,email:!1}),className:"CancelButtonUAcc",children:e.jsx(J,{fontSize:"small"})}):e.jsx("button",{type:"button",onClick:()=>l({...r,email:!0}),className:"EditButtonUAcc",children:e.jsx(y,{fontSize:"small"})})]})]}),e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"phoneNumber",children:"Phone number"}),e.jsxs("div",{className:"InputWithActionUAcc",children:[e.jsx("input",{type:"tel",id:"phoneNumber",value:I,onChange:s=>k(s.target.value),disabled:!r.phoneNumber}),r.phoneNumber?e.jsx("button",{type:"button",onClick:()=>l({...r,phoneNumber:!1}),className:"CancelButtonUAcc",children:e.jsx(J,{fontSize:"small"})}):e.jsx("button",{type:"button",onClick:()=>l({...r,phoneNumber:!0}),className:"EditButtonUAcc",children:e.jsx(y,{fontSize:"small"})})]})]}),e.jsx("div",{className:"ActionsUAcc",children:e.jsx("button",{type:"submit",className:"SaveButtonUAcc",children:"Save Changes"})})]})}),h==="password"&&e.jsx("div",{className:"TabContentUAcc",children:e.jsx("div",{className:"PasswordTabCardUAcc",children:e.jsxs("form",{onSubmit:ce,className:"PasswordFormUAcc",children:[e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"currentPassword",children:"Current Password*"}),e.jsx("input",{type:"password",id:"currentPassword",value:T,onChange:s=>G(s.target.value),required:!0})]}),e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"newPassword",children:"New Password*"}),e.jsx("input",{type:"password",id:"newPassword",value:i,onChange:s=>L(s.target.value),required:!0}),e.jsx("p",{className:"PasswordRequirementsUAcc",children:"Password must be at least 8 characters long and include uppercase, lowercase and numbers."})]}),e.jsxs("div",{className:"FormGroupUAcc",children:[e.jsx("label",{htmlFor:"confirmPassword",children:"Confirm New Password*"}),e.jsx("input",{type:"password",id:"confirmPassword",value:$,onChange:s=>z(s.target.value),required:!0})]}),e.jsx("div",{className:"ActionsUAcc",children:e.jsx("button",{type:"submit",className:"SaveButtonUAcc",children:"Update Password"})})]})})})]})]})};U.__docgenInfo={description:"",methods:[],displayName:"UserAccount"};const ve={title:"Components/UserAccount",component:U},m=()=>e.jsx(U,{});m.__docgenInfo={description:"",methods:[],displayName:"Default"};var K,Q,X;m.parameters={...m.parameters,docs:{...(K=m.parameters)==null?void 0:K.docs,source:{originalSource:"() => <UserAccount />",...(X=(Q=m.parameters)==null?void 0:Q.docs)==null?void 0:X.source}}};const Ce=["Default"];export{m as Default,Ce as __namedExportsOrder,ve as default};
